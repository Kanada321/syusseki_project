version: "3.8"
networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:
  ### Application(PHP/Laravel API) #########################################
  api:
    container_name: ${PROJECT_NAME}-api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    volumes:
      - ${WORK_DIR_BACKEND}:/var/www/application
      - ./api/settings/php.dev.ini:/usr/local/etc/php/conf.d/php.ini
      - ./api/settings/www.dev.conf:/usr/local/etc/php-fpm.d/www.confFROM
    networks:
      - backend

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
    container_name: ${PROJECT_NAME}-nginx
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ${WORK_DIR_BACKEND}:/var/www/application
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf
      - ${DATA_PATH_HOST}/nginx/logs:/var/log/nginx
      - ./nginx/certs:/etc/ssl/certs
#    depends_on:
#      - api
    networks:
      - backend
      - frontend

  ### MySQL ################################################
  mysql:
    container_name: ${PROJECT_NAME}-mysql
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=UTC
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysqll:rw
      - ${DATA_PATH_HOST}/mysql/logs:/var/log/mysql:rw
      # - ./mysql/dump/setup.sql:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
#    depends_on:
#      - redis
    networks:
      - backend

### Nodejs(Laravel) ################################################
  nodejs:
    container_name: ${PROJECT_NAME}-nodejs
    image: node:18.12.1-alpine3.16
    tty: true
    volumes:
      - ${WORK_DIR_BACKEND}:/var/www/application:delegated
#    depends_on:
#      - redis
    networks:
      - backend

### Nodejs(Next) #########################################
  frontend:
    container_name: ${PROJECT_NAME}-next
    build: ./next
    volumes:
      - ${WORK_DIR_FRONTEND}:/app
    command: 'yarn dev'
    ports:
      - "${FRONT_PORT}:3000"
    networks:
      - frontend

  ### Redis ################################################
  redis:
    container_name: ${PROJECT_NAME}-redis
    build:
      context: .
      dockerfile: ./redis/Dockerfile
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    networks:
      - backend
